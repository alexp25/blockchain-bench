test:
  name: create-asset
  description: >-
    This is a duration based benchmark targeting a Hyperledger Fabric network
    using the `fixed-asset` NodeJS chaincode
    contract that is interacted with via a Fabric-SDK-Node Gateway. Each test
    round invokes the `createAsset` method, with successive rounds increasing
    the byteSize of the asset added into the world state database.
  workers:
    type: local
    number: 5
  rounds:
    - label: create-asset-8000-fixed-tps
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 8000 bytes into the World State database at a fixed TPS
        rate.
      chaincodeID: fixed-asset-base
      txDuration: 30
      rateControl:
        type: fixed-rate
        opts:
          tps: 15
      workload:
        module: benchmarks/api/fabric/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset-base
          byteSize: 8000
    - label: create-asset-100
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset-base
      txDuration: 30
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 10
          startingTps: 1
      workload:
        module: benchmarks/api/fabric/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset-base
          byteSize: 100
    - label: create-asset-1000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 2000 bytes into the World State database.
      chaincodeID: fixed-asset-base
      txDuration: 30
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 10
          startingTps: 1
      workload:
        module: benchmarks/api/fabric/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset-base
          byteSize: 1000
    - label: create-asset-2000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 2000 bytes into the World State database.
      chaincodeID: fixed-asset-base
      txDuration: 30
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 10
          startingTps: 1
      workload:
        module: benchmarks/api/fabric/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset-base
          byteSize: 2000
    - label: create-asset-4000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 4000 bytes into the World State database.
      chaincodeID: fixed-asset-base
      txDuration: 30
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 10
          startingTps: 1
      workload:
        module: benchmarks/api/fabric/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset-base
          byteSize: 4000
    - label: create-asset-8000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 8000 bytes into the World State database.
      chaincodeID: fixed-asset-base
      txDuration: 30
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 10
          startingTps: 1
      workload:
        module: benchmarks/api/fabric/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset-base
          byteSize: 8000
    